{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/Country.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { daysCount } from \"../helpers/userPageHelper\";\nimport { WorldDataContext } from \"./WorldDataContext\";\n\nconst Country = () => {\n  _s();\n\n  const [countryData, setCountryData] = useState(\"\");\n  const [countryChoice, setCountryChoice] = useState(\"Worldwide\");\n  const {\n    data,\n    isLoading\n  } = useContext(WorldDataContext);\n  const [covNum, setCovNum] = useState([{\n    cases: 0,\n    recovered: 0,\n    deaths: 0\n  }]);\n\n  const getCountryInfo = async specificCountry => {\n    var _result$data, _result$data$timeline, _result$data2, _result$data2$timelin, _result$data3, _result$data3$timelin;\n\n    const numDays = daysCount();\n    const response = await fetch(`/api/${specificCountry}/${numDays}`);\n    const result = await response.json();\n    setCountryChoice(result.data.country);\n    setCountryData({\n      cases: result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$timeline = _result$data.timeline) === null || _result$data$timeline === void 0 ? void 0 : _result$data$timeline.cases,\n      deaths: result === null || result === void 0 ? void 0 : (_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : (_result$data2$timelin = _result$data2.timeline) === null || _result$data2$timelin === void 0 ? void 0 : _result$data2$timelin.deaths,\n      recovered: result === null || result === void 0 ? void 0 : (_result$data3 = result.data) === null || _result$data3 === void 0 ? void 0 : (_result$data3$timelin = _result$data3.timeline) === null || _result$data3$timelin === void 0 ? void 0 : _result$data3$timelin.recovered\n    });\n    return result;\n  };\n\n  React.useEffect(() => {}, []); // let cases = countryData && Object.entries(countryData?.timeline?.cases);\n\n  console.log({\n    countryData\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Choose a country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: countryChoice // {!countryData ? \"Choose a Country\" : countryData?.country}\n      ,\n      onChange: e => {\n        getCountryInfo(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: countryChoice,\n        children: countryChoice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : data === null || data === void 0 ? void 0 : data.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.country,\n          children: item.country\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), countryData === undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Historical data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Country, \"AY9eNE8QoV3b57hkZVW9W/i6FGI=\");\n\n_c = Country;\nconst Wrapper = styled.div``;\n_c2 = Wrapper;\nexport default Country;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/Country.jsx"],"names":["React","useContext","useState","styled","daysCount","WorldDataContext","Country","countryData","setCountryData","countryChoice","setCountryChoice","data","isLoading","covNum","setCovNum","cases","recovered","deaths","getCountryInfo","specificCountry","numDays","response","fetch","result","json","country","timeline","useEffect","console","log","e","target","value","map","item","index","undefined","Wrapper","div"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { daysCount } from \"../helpers/userPageHelper\";\n\nimport { WorldDataContext } from \"./WorldDataContext\";\n\nconst Country = () => {\n  const [countryData, setCountryData] = useState(\"\");\n  const [countryChoice, setCountryChoice] = useState(\"Worldwide\");\n  const { data, isLoading } = useContext(WorldDataContext);\n  const [covNum, setCovNum] = useState([{ cases: 0, recovered: 0, deaths: 0 }]);\n\n  const getCountryInfo = async (specificCountry) => {\n    const numDays = daysCount();\n    const response = await fetch(`/api/${specificCountry}/${numDays}`);\n    const result = await response.json();\n    setCountryChoice(result.data.country);\n    setCountryData({\n      cases: result?.data?.timeline?.cases,\n      deaths: result?.data?.timeline?.deaths,\n      recovered: result?.data?.timeline?.recovered,\n    });\n    return result;\n  };\n\n  React.useEffect(() => {}, []);\n\n  // let cases = countryData && Object.entries(countryData?.timeline?.cases);\n  console.log({ countryData });\n\n  return (\n    <Wrapper>\n      <div>Choose a country</div>\n      <select\n        value={countryChoice}\n        // {!countryData ? \"Choose a Country\" : countryData?.country}\n        onChange={(e) => {\n          getCountryInfo(e.target.value);\n        }}\n      >\n        <option value={countryChoice}>{countryChoice}</option>\n        {isLoading ? (\n          <></>\n        ) : (\n          data?.map((item, index) => {\n            return (\n              <option key={index} value={item.country}>\n                {item.country}\n              </option>\n            );\n          })\n        )}\n      </select>\n      {countryData === undefined ? (\n        <></>\n      ) : (\n        <>\n          <div>Historical data</div>\n\n          <>\n            {/* {countryData?.timeline ? ( .map((item) => {\n              return (\n                <div key={item[0]}>\n                  {item[0]} - {item[1]}\n                </div>\n              );\n            })} */}\n          </>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div``;\n\nexport default Country;\n"]},"metadata":{},"sourceType":"module"}