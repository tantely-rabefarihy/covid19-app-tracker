{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/UserChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { WorldDataContext } from \"./WorldDataContext\";\nimport { daysCount } from \"../helpers/userPageHelper\";\nconst data = [{\n  name: \"Page A\",\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: \"Page B\",\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: \"Page C\",\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: \"Page D\",\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: \"Page E\",\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: \"Page F\",\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: \"Page G\",\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nconst UserChart = () => {\n  _s();\n\n  const {\n    countryData\n  } = useContext(WorldDataContext); // console.log({ countryData });\n\n  const cases = countryData && Object.values(countryData.cases);\n  const deaths = countryData && Object.values(countryData.deaths);\n  const recovered = countryData && Object.values(countryData.recovered);\n  const merged = [...cases, ...deaths, ...recovered]; // const merged = (arr1, arr2) => {\n  //   return arr1.map((item, i) => {\n  //     if (item[0] === arr2[i][0]) {\n  //       return Object.assign({}, item, arr2[i]);\n  //     }\n  //   });\n  // };\n\n  console.log(merged); // const alldata = [\n  //   countryData[\"cases\"],\n  //   countryData[\"deaths\"],\n  //   countryData[\"recovered\"],\n  // ];\n  // const array = Object.values(countryData);\n  // const cases = Object.values(array[0]);\n  // const deaths = Object.values(array[1]);\n  // const recovered = Object.values(array[2]);\n  // console.log({ cases, deaths, recovered });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AreaChart, {\n      width: 600,\n      height: 400,\n      data: data,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stackId: \"1\",\n        stroke: \"#8884d8\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"pv\",\n        stackId: \"1\",\n        stroke: \"#82ca9d\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"amt\",\n        stackId: \"1\",\n        stroke: \"#ffc658\",\n        fill: \"#ffc658\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserChart, \"isTscoBMKfAc1FZmHlUmmFCGtjk=\");\n\n_c = UserChart;\nexport default UserChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserChart\");","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/UserChart.jsx"],"names":["React","useContext","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","WorldDataContext","daysCount","data","name","uv","pv","amt","UserChart","countryData","cases","Object","values","deaths","recovered","merged","console","log","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\nimport { WorldDataContext } from \"./WorldDataContext\";\nimport { daysCount } from \"../helpers/userPageHelper\";\nconst data = [\n  { name: \"Page A\", uv: 4000, pv: 2400, amt: 2400 },\n  { name: \"Page B\", uv: 3000, pv: 1398, amt: 2210 },\n  { name: \"Page C\", uv: 2000, pv: 9800, amt: 2290 },\n  { name: \"Page D\", uv: 2780, pv: 3908, amt: 2000 },\n  { name: \"Page E\", uv: 1890, pv: 4800, amt: 2181 },\n  { name: \"Page F\", uv: 2390, pv: 3800, amt: 2500 },\n  { name: \"Page G\", uv: 3490, pv: 4300, amt: 2100 },\n];\n\nconst UserChart = () => {\n  const { countryData } = useContext(WorldDataContext);\n  // console.log({ countryData });\n  const cases = countryData && Object.values(countryData.cases);\n  const deaths = countryData && Object.values(countryData.deaths);\n  const recovered = countryData && Object.values(countryData.recovered);\n\n  const merged = [...cases, ...deaths, ...recovered];\n  // const merged = (arr1, arr2) => {\n  //   return arr1.map((item, i) => {\n  //     if (item[0] === arr2[i][0]) {\n  //       return Object.assign({}, item, arr2[i]);\n  //     }\n  //   });\n  // };\n  console.log(merged);\n  // const alldata = [\n  //   countryData[\"cases\"],\n  //   countryData[\"deaths\"],\n  //   countryData[\"recovered\"],\n  // ];\n  // const array = Object.values(countryData);\n\n  // const cases = Object.values(array[0]);\n  // const deaths = Object.values(array[1]);\n  // const recovered = Object.values(array[2]);\n\n  // console.log({ cases, deaths, recovered });\n  return (\n    <div>\n      <AreaChart\n        width={600}\n        height={400}\n        data={data}\n        margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Area\n          type=\"monotone\"\n          dataKey=\"uv\"\n          stackId=\"1\"\n          stroke=\"#8884d8\"\n          fill=\"#8884d8\"\n        />\n        <Area\n          type=\"monotone\"\n          dataKey=\"pv\"\n          stackId=\"1\"\n          stroke=\"#82ca9d\"\n          fill=\"#82ca9d\"\n        />\n        <Area\n          type=\"monotone\"\n          dataKey=\"amt\"\n          stackId=\"1\"\n          stroke=\"#ffc658\"\n          fill=\"#ffc658\"\n        />\n      </AreaChart>{\" \"}\n    </div>\n  );\n};\n\nexport default UserChart;\n"]},"metadata":{},"sourceType":"module"}