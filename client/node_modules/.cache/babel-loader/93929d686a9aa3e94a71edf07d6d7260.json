{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/WorldDataContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { daysCount } from \"../helpers/userPageHelper\";\nexport const WorldDataContext = /*#__PURE__*/createContext(null);\nexport const WorldDataProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState();\n  const [country, setCountry] = useState();\n  const [isLoading, SetIsLoading] = useState(true);\n  const [coordinates, setCoordinates] = useState([0, 0]);\n  const [zoomScale, setZoomScale] = useState(2);\n  const [formValue, setFormValue] = useState(\"\");\n  const [countryData, setCountryData] = useState({\n    cases: 0,\n    deaths: 0,\n    recovered: 0\n  });\n  const [countryChoice, setCountryChoice] = useState(\"Worldwide\");\n\n  const getCountryInfo = async specificCountry => {\n    var _result$data, _result$data$timeline, _result$data2, _result$data2$timelin, _result$data3, _result$data3$timelin;\n\n    const numDays = daysCount();\n    const response = await fetch(`/api/${specificCountry}/${numDays}`);\n    const result = await response.json();\n    setCountryChoice(result.data.country);\n    setCountryData({\n      cases: result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$timeline = _result$data.timeline) === null || _result$data$timeline === void 0 ? void 0 : _result$data$timeline.cases,\n      deaths: result === null || result === void 0 ? void 0 : (_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : (_result$data2$timelin = _result$data2.timeline) === null || _result$data2$timelin === void 0 ? void 0 : _result$data2$timelin.deaths,\n      recovered: result === null || result === void 0 ? void 0 : (_result$data3 = result.data) === null || _result$data3 === void 0 ? void 0 : (_result$data3$timelin = _result$data3.timeline) === null || _result$data3$timelin === void 0 ? void 0 : _result$data3$timelin.recovered\n    });\n    return result;\n  };\n\n  const getCountriesData = async () => {\n    let response = await fetch(\"/api/home\");\n    let data = await response.json();\n    return data;\n  };\n\n  const getSpecificCountry = specificCountry => {\n    const chosenCountry = data === null || data === void 0 ? void 0 : data.find(item => {\n      return item.country.toLowerCase() === specificCountry.toLowerCase();\n    });\n    setCountry(chosenCountry);\n    setFormValue(chosenCountry);\n    setCoordinates([chosenCountry.countryInfo.lat, chosenCountry.countryInfo.long]);\n    setZoomScale(5);\n    return chosenCountry;\n  };\n\n  React.useEffect(() => {\n    getCountriesData().then(countriesData => {\n      setData(countriesData.allCountriesData);\n      SetIsLoading(false);\n    });\n  }, [country]);\n  console.log({\n    country\n  });\n  return /*#__PURE__*/_jsxDEV(WorldDataContext.Provider, {\n    value: {\n      data,\n      isLoading,\n      country,\n      coordinates,\n      zoomScale,\n      formValue,\n      countryData,\n      countryChoice,\n      getCountryInfo: getCountryInfo,\n      getSpecificCountry: getSpecificCountry\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorldDataProvider, \"qpbjiQWYennHD0A8xX58QOPDUX4=\");\n\n_c = WorldDataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorldDataProvider\");","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/WorldDataContext.jsx"],"names":["React","createContext","useState","daysCount","WorldDataContext","WorldDataProvider","children","data","setData","country","setCountry","isLoading","SetIsLoading","coordinates","setCoordinates","zoomScale","setZoomScale","formValue","setFormValue","countryData","setCountryData","cases","deaths","recovered","countryChoice","setCountryChoice","getCountryInfo","specificCountry","numDays","response","fetch","result","json","timeline","getCountriesData","getSpecificCountry","chosenCountry","find","item","toLowerCase","countryInfo","lat","long","useEffect","then","countriesData","allCountriesData","console","log"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { daysCount } from \"../helpers/userPageHelper\";\nexport const WorldDataContext = createContext(null);\n\nexport const WorldDataProvider = ({ children }) => {\n  const [data, setData] = useState();\n  const [country, setCountry] = useState();\n  const [isLoading, SetIsLoading] = useState(true);\n  const [coordinates, setCoordinates] = useState([0, 0]);\n  const [zoomScale, setZoomScale] = useState(2);\n  const [formValue, setFormValue] = useState(\"\");\n  const [countryData, setCountryData] = useState({\n    cases: 0,\n    deaths: 0,\n    recovered: 0,\n  });\n  const [countryChoice, setCountryChoice] = useState(\"Worldwide\");\n\n  const getCountryInfo = async (specificCountry) => {\n    const numDays = daysCount();\n    const response = await fetch(`/api/${specificCountry}/${numDays}`);\n    const result = await response.json();\n    setCountryChoice(result.data.country);\n    setCountryData({\n      cases: result?.data?.timeline?.cases,\n      deaths: result?.data?.timeline?.deaths,\n      recovered: result?.data?.timeline?.recovered,\n    });\n    return result;\n  };\n\n  const getCountriesData = async () => {\n    let response = await fetch(\"/api/home\");\n    let data = await response.json();\n    return data;\n  };\n\n  const getSpecificCountry = (specificCountry) => {\n    const chosenCountry = data?.find((item) => {\n      return item.country.toLowerCase() === specificCountry.toLowerCase();\n    });\n\n    setCountry(chosenCountry);\n    setFormValue(chosenCountry);\n    setCoordinates([\n      chosenCountry.countryInfo.lat,\n      chosenCountry.countryInfo.long,\n    ]);\n    setZoomScale(5);\n    return chosenCountry;\n  };\n\n  React.useEffect(() => {\n    getCountriesData().then((countriesData) => {\n      setData(countriesData.allCountriesData);\n      SetIsLoading(false);\n    });\n  }, [country]);\n\n  console.log({ country });\n  return (\n    <WorldDataContext.Provider\n      value={{\n        data,\n        isLoading,\n        country,\n        coordinates,\n        zoomScale,\n        formValue,\n        countryData,\n        countryChoice,\n        getCountryInfo: getCountryInfo,\n        getSpecificCountry: getSpecificCountry,\n      }}\n    >\n      {children}\n    </WorldDataContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}