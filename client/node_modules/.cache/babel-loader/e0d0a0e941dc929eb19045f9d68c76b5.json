{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/helpers/helpers.js\";\nimport { Circle, Popup, Tooltip } from \"react-leaflet\";\nimport { numeral } from \"numeral\";\nexport const displayCountryNum = (data, casesType = \"cases\") => {\n  console.log({\n    data\n  });\n  return data.map((country, index) => {\n    console.log(country.cases); // let formatNum;\n    // if (country.cases > 1000) {\n    //   formatNum = \"0 a\";\n    // } else if (country.cases > 1000000) {\n    //   formatNum = \"0.0a\";\n    // }\n\n    const numCases = new Intl.NumberFormat(\"en\").format(country.cases);\n    return /*#__PURE__*/_jsxDEV(Circle, {\n      center: [country.countryInfo.lat, country.countryInfo.long],\n      radius: Math.floor(country.cases * 10 / 100),\n      color: \"red\",\n      fillColor: \"red\",\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        children: numCases\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  });\n};","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/helpers/helpers.js"],"names":["Circle","Popup","Tooltip","numeral","displayCountryNum","data","casesType","console","log","map","country","index","cases","numCases","Intl","NumberFormat","format","countryInfo","lat","long","Math","floor"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAuC,eAAvC;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,SAAS,GAAG,OAAnB,KAA+B;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA;AAAF,GAAZ;AACA,SAAOA,IAAI,CAACI,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAClCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACE,KAApB,EADkC,CAElC;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,QAAQ,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCN,OAAO,CAACE,KAA3C,CAAjB;AAEA,wBACE,QAAC,MAAD;AAEE,MAAA,MAAM,EAAE,CAACF,OAAO,CAACO,WAAR,CAAoBC,GAArB,EAA0BR,OAAO,CAACO,WAAR,CAAoBE,IAA9C,CAFV;AAGE,MAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAYX,OAAO,CAACE,KAAR,GAAgB,EAAjB,GAAuB,GAAlC,CAHV;AAIE,MAAA,KAAK,EAAE,KAJT;AAKE,MAAA,SAAS,EAAE,KALb;AAAA,6BAOE,QAAC,OAAD;AAAA,kBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA;AAPF,OACOF,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GArBM,CAAP;AAsBD,CAxBM","sourcesContent":["import { Circle, Popup, Tooltip } from \"react-leaflet\";\nimport { numeral } from \"numeral\";\n\nexport const displayCountryNum = (data, casesType = \"cases\") => {\n  console.log({ data });\n  return data.map((country, index) => {\n    console.log(country.cases);\n    // let formatNum;\n    // if (country.cases > 1000) {\n    //   formatNum = \"0 a\";\n    // } else if (country.cases > 1000000) {\n    //   formatNum = \"0.0a\";\n    // }\n    const numCases = new Intl.NumberFormat(\"en\").format(country.cases);\n\n    return (\n      <Circle\n        key={index}\n        center={[country.countryInfo.lat, country.countryInfo.long]}\n        radius={Math.floor((country.cases * 10) / 100)}\n        color={\"red\"}\n        fillColor={\"red\"}\n      >\n        <Tooltip>{numCases}</Tooltip>\n      </Circle>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}