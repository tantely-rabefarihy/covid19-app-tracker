{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/UserChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { WorldDataContext } from \"./WorldDataContext\";\nimport styled from \"styled-components\"; // const formatedNum = (num) => {\n//   return new Intl.NumberFormat(\"en\").format(num);\n// };\n\nconst UserChart = () => {\n  _s();\n\n  const {\n    countryData\n  } = useContext(WorldDataContext);\n  console.log(\"Country data : \", countryData);\n  let numCases;\n  let numDeaths;\n  let numRecovered;\n  let dates;\n\n  if ((countryData === null || countryData === void 0 ? void 0 : countryData.length) !== undefined) {\n    numCases = Object.values(countryData === null || countryData === void 0 ? void 0 : countryData.cases);\n    numDeaths = Object.values(countryData === null || countryData === void 0 ? void 0 : countryData.deaths);\n    numRecovered = Object.values(countryData === null || countryData === void 0 ? void 0 : countryData.recovered);\n    dates = Object.keys(countryData === null || countryData === void 0 ? void 0 : countryData.cases);\n  }\n\n  const covData = [];\n\n  for (let i = 0; i < ((_numCases = numCases) === null || _numCases === void 0 ? void 0 : _numCases.length); i++) {\n    var _numCases;\n\n    let d = {\n      date: dates[i],\n      cases: numCases[i],\n      deaths: numDeaths[i],\n      recovered: numRecovered[i]\n    };\n    covData.push(d);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (countryData === null || countryData === void 0 ? void 0 : countryData.length) === undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        width: 600,\n        height: 400,\n        data: covData,\n        margin: {\n          top: 10,\n          right: 0,\n          left: 0,\n          bottom: 0\n        },\n        padding: \"10px\",\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"4 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: \"black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"cases\",\n          stackId: \"cases\",\n          stroke: \"#dfc118\",\n          fill: \"#d8cd30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"deaths\",\n          stackId: \"deaths\",\n          stroke: \"#ff0000\",\n          fill: \"#f50303\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"recovered\",\n          stackId: \"recovered\",\n          stroke: \"#6bff58\",\n          fill: \"#49da25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserChart, \"isTscoBMKfAc1FZmHlUmmFCGtjk=\");\n\n_c = UserChart;\nconst ChartContainer = styled.div``;\n_c2 = ChartContainer;\nexport default UserChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserChart\");\n$RefreshReg$(_c2, \"ChartContainer\");","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/UserChart.jsx"],"names":["React","useContext","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","WorldDataContext","styled","UserChart","countryData","console","log","numCases","numDeaths","numRecovered","dates","length","undefined","Object","values","cases","deaths","recovered","keys","covData","i","d","date","push","top","right","left","bottom","backgroundColor","ChartContainer","div"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\nimport { WorldDataContext } from \"./WorldDataContext\";\nimport styled from \"styled-components\";\n\n// const formatedNum = (num) => {\n//   return new Intl.NumberFormat(\"en\").format(num);\n// };\n\nconst UserChart = () => {\n  const { countryData } = useContext(WorldDataContext);\n  console.log(\"Country data : \", countryData);\n\n  let numCases;\n  let numDeaths;\n  let numRecovered;\n  let dates;\n\n  if (countryData?.length !== undefined) {\n    numCases = Object.values(countryData?.cases);\n    numDeaths = Object.values(countryData?.deaths);\n    numRecovered = Object.values(countryData?.recovered);\n    dates = Object.keys(countryData?.cases);\n  }\n\n  const covData = [];\n  for (let i = 0; i < numCases?.length; i++) {\n    let d = {\n      date: dates[i],\n      cases: numCases[i],\n      deaths: numDeaths[i],\n      recovered: numRecovered[i],\n    };\n    covData.push(d);\n  }\n\n  return (\n    <>\n      {countryData?.length === undefined ? (\n        <></>\n      ) : (\n        <ChartContainer>\n          <AreaChart\n            width={600}\n            height={400}\n            data={covData}\n            margin={{ top: 10, right: 0, left: 0, bottom: 0 }}\n            padding={\"10px\"}\n          >\n            <CartesianGrid strokeDasharray=\"4 4\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip contentStyle={{ backgroundColor: \"black\" }} />\n            <Area\n              type=\"monotone\"\n              dataKey=\"cases\"\n              stackId=\"cases\"\n              stroke=\"#dfc118\"\n              fill=\"#d8cd30\"\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"deaths\"\n              stackId=\"deaths\"\n              stroke=\"#ff0000\"\n              fill=\"#f50303\"\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"recovered\"\n              stackId=\"recovered\"\n              stroke=\"#6bff58\"\n              fill=\"#49da25\"\n            />\n          </AreaChart>\n        </ChartContainer>\n      )}\n    </>\n  );\n};\n\nconst ChartContainer = styled.div``;\n\nexport default UserChart;\n"]},"metadata":{},"sourceType":"module"}