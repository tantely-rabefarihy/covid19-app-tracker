{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/WorldDataContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nexport const WorldDataContext = /*#__PURE__*/createContext(null);\nexport const WorldDataProvider = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = useState();\n  const [country, setCountry] = useState();\n  const [isLoading, SetIsLoading] = useState(true);\n  const [coordinates, setCoordinates] = useState([0, 0]);\n  const [zoomScale, setZoomScale] = useState(2);\n  const [formValue, setFormValue] = useState(\"\");\n  const [countryData, setCountryData] = useState(\"\");\n  const [countryChoice, setCountryChoice] = useState(\"Worldwide\");\n\n  const getCountryInfo = async specificCountry => {\n    var _result$data, _result$data$timeline, _result$data2, _result$data2$timelin, _result$data3, _result$data3$timelin;\n\n    const numDays = daysCount();\n    const response = await fetch(`/api/${specificCountry}/${numDays}`);\n    const result = await response.json();\n    setCountryChoice(result.data.country);\n    setCountryData({\n      cases: result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$timeline = _result$data.timeline) === null || _result$data$timeline === void 0 ? void 0 : _result$data$timeline.cases,\n      deaths: result === null || result === void 0 ? void 0 : (_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : (_result$data2$timelin = _result$data2.timeline) === null || _result$data2$timelin === void 0 ? void 0 : _result$data2$timelin.deaths,\n      recovered: result === null || result === void 0 ? void 0 : (_result$data3 = result.data) === null || _result$data3 === void 0 ? void 0 : (_result$data3$timelin = _result$data3.timeline) === null || _result$data3$timelin === void 0 ? void 0 : _result$data3$timelin.recovered\n    });\n    return result;\n  };\n\n  const getCountriesData = async () => {\n    let response = await fetch(\"/api/home\");\n    let data = await response.json();\n    return data;\n  };\n\n  const getSpecificCountry = specificCountry => {\n    const chosenCountry = data === null || data === void 0 ? void 0 : data.find(item => {\n      return item.country.toLowerCase() === specificCountry.toLowerCase();\n    });\n    setCountry(chosenCountry);\n    setFormValue(chosenCountry);\n    setCoordinates([chosenCountry.countryInfo.lat, chosenCountry.countryInfo.long]);\n    setZoomScale(8);\n    return chosenCountry;\n  };\n\n  React.useEffect(() => {\n    getCountriesData().then(countriesData => {\n      setData(countriesData.allCountriesData);\n      SetIsLoading(false);\n    });\n  }, [country]);\n  console.log({\n    country\n  });\n  return /*#__PURE__*/_jsxDEV(WorldDataContext.Provider, {\n    value: {\n      data,\n      isLoading,\n      country,\n      coordinates,\n      zoomScale,\n      formValue,\n      countryData,\n      countryChoice,\n      getCountryInfo: getCountryInfo,\n      getSpecificCountry: getSpecificCountry\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorldDataProvider, \"WY385b3hqie9a0FyXFTnVSUfLes=\");\n\n_c = WorldDataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorldDataProvider\");","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/WorldDataContext.jsx"],"names":["React","createContext","useState","WorldDataContext","WorldDataProvider","children","data","setData","country","setCountry","isLoading","SetIsLoading","coordinates","setCoordinates","zoomScale","setZoomScale","formValue","setFormValue","countryData","setCountryData","countryChoice","setCountryChoice","getCountryInfo","specificCountry","numDays","daysCount","response","fetch","result","json","cases","timeline","deaths","recovered","getCountriesData","getSpecificCountry","chosenCountry","find","item","toLowerCase","countryInfo","lat","long","useEffect","then","countriesData","allCountriesData","console","log"],"mappings":"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","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const WorldDataContext = createContext(null);\n\nexport const WorldDataProvider = ({ children }) => {\n  const [data, setData] = useState();\n  const [country, setCountry] = useState();\n  const [isLoading, SetIsLoading] = useState(true);\n  const [coordinates, setCoordinates] = useState([0, 0]);\n  const [zoomScale, setZoomScale] = useState(2);\n  const [formValue, setFormValue] = useState(\"\");\n  const [countryData, setCountryData] = useState(\"\");\n  const [countryChoice, setCountryChoice] = useState(\"Worldwide\");\n\n  const getCountryInfo = async (specificCountry) => {\n    const numDays = daysCount();\n    const response = await fetch(`/api/${specificCountry}/${numDays}`);\n    const result = await response.json();\n    setCountryChoice(result.data.country);\n    setCountryData({\n      cases: result?.data?.timeline?.cases,\n      deaths: result?.data?.timeline?.deaths,\n      recovered: result?.data?.timeline?.recovered,\n    });\n    return result;\n  };\n\n  const getCountriesData = async () => {\n    let response = await fetch(\"/api/home\");\n    let data = await response.json();\n    return data;\n  };\n\n  const getSpecificCountry = (specificCountry) => {\n    const chosenCountry = data?.find((item) => {\n      return item.country.toLowerCase() === specificCountry.toLowerCase();\n    });\n\n    setCountry(chosenCountry);\n    setFormValue(chosenCountry);\n    setCoordinates([\n      chosenCountry.countryInfo.lat,\n      chosenCountry.countryInfo.long,\n    ]);\n    setZoomScale(8);\n    return chosenCountry;\n  };\n\n  React.useEffect(() => {\n    getCountriesData().then((countriesData) => {\n      setData(countriesData.allCountriesData);\n      SetIsLoading(false);\n    });\n  }, [country]);\n\n  console.log({ country });\n  return (\n    <WorldDataContext.Provider\n      value={{\n        data,\n        isLoading,\n        country,\n        coordinates,\n        zoomScale,\n        formValue,\n        countryData,\n        countryChoice,\n        getCountryInfo: getCountryInfo,\n        getSpecificCountry: getSpecificCountry,\n      }}\n    >\n      {children}\n    </WorldDataContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}