{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/UserChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { WorldDataContext } from \"./WorldDataContext\";\nimport styled from \"styled-components\";\n\nconst formatedNum = num => {\n  return new Intl.NumberFormat(\"en\").format(num);\n};\n\nconst UserChart = () => {\n  _s();\n\n  const {\n    countryData\n  } = useContext(WorldDataContext);\n  let numCases;\n  let numDeaths;\n  let numRecovered;\n  let dates;\n\n  if (countryData) {\n    numCases = Object === null || Object === void 0 ? void 0 : Object.values(countryData === null || countryData === void 0 ? void 0 : countryData.cases);\n    numDeaths = Object === null || Object === void 0 ? void 0 : Object.values(countryData === null || countryData === void 0 ? void 0 : countryData.deaths);\n    numRecovered = Object === null || Object === void 0 ? void 0 : Object.values(countryData === null || countryData === void 0 ? void 0 : countryData.recovered);\n    dates = Object === null || Object === void 0 ? void 0 : Object.keys(countryData === null || countryData === void 0 ? void 0 : countryData.cases);\n  }\n\n  const covData = [];\n\n  for (let i = 0; i < ((_numCases = numCases) === null || _numCases === void 0 ? void 0 : _numCases.length); i++) {\n    var _numCases;\n\n    let d = {\n      date: dates[i],\n      cases: formatedNum(numCases[i]),\n      deaths: formatedNum(numDeaths[i]),\n      recovered: formatedNum(numRecovered[i])\n    };\n    covData.push(d);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !countryData ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        width: 600,\n        height: 400,\n        data: covData,\n        margin: {\n          top: 10,\n          right: 0,\n          left: 0,\n          bottom: 0\n        },\n        padding: \"10px\",\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"4 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: \"black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"cases\",\n          stackId: \"cases\",\n          stroke: \"#dfc118\",\n          fill: \"#d8cd30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"deaths\",\n          stackId: \"deaths\",\n          stroke: \"#ff0000\",\n          fill: \"#f50303\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"recovered\",\n          stackId: \"recovered\",\n          stroke: \"#6bff58\",\n          fill: \"#49da25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserChart, \"isTscoBMKfAc1FZmHlUmmFCGtjk=\");\n\n_c = UserChart;\nconst ChartContainer = styled.div``;\n_c2 = ChartContainer;\nexport default UserChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserChart\");\n$RefreshReg$(_c2, \"ChartContainer\");","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/UserChart.jsx"],"names":["React","useContext","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","WorldDataContext","styled","formatedNum","num","Intl","NumberFormat","format","UserChart","countryData","numCases","numDeaths","numRecovered","dates","Object","values","cases","deaths","recovered","keys","covData","i","length","d","date","push","top","right","left","bottom","backgroundColor","ChartContainer","div"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\nimport { WorldDataContext } from \"./WorldDataContext\";\nimport styled from \"styled-components\";\n\nconst formatedNum = (num) => {\n  return new Intl.NumberFormat(\"en\").format(num);\n};\n\nconst UserChart = () => {\n  const { countryData } = useContext(WorldDataContext);\n\n  let numCases;\n  let numDeaths;\n  let numRecovered;\n  let dates;\n\n  if (countryData) {\n    numCases = Object?.values(countryData?.cases);\n    numDeaths = Object?.values(countryData?.deaths);\n    numRecovered = Object?.values(countryData?.recovered);\n    dates = Object?.keys(countryData?.cases);\n  }\n\n  const covData = [];\n  for (let i = 0; i < numCases?.length; i++) {\n    let d = {\n      date: dates[i],\n      cases: formatedNum(numCases[i]),\n      deaths: formatedNum(numDeaths[i]),\n      recovered: formatedNum(numRecovered[i]),\n    };\n    covData.push(d);\n  }\n\n  return (\n    <>\n      {!countryData ? (\n        <></>\n      ) : (\n        <ChartContainer>\n          <AreaChart\n            width={600}\n            height={400}\n            data={covData}\n            margin={{ top: 10, right: 0, left: 0, bottom: 0 }}\n            padding={\"10px\"}\n          >\n            <CartesianGrid strokeDasharray=\"4 4\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip contentStyle={{ backgroundColor: \"black\" }} />\n            <Area\n              type=\"monotone\"\n              dataKey=\"cases\"\n              stackId=\"cases\"\n              stroke=\"#dfc118\"\n              fill=\"#d8cd30\"\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"deaths\"\n              stackId=\"deaths\"\n              stroke=\"#ff0000\"\n              fill=\"#f50303\"\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"recovered\"\n              stackId=\"recovered\"\n              stroke=\"#6bff58\"\n              fill=\"#49da25\"\n            />\n          </AreaChart>\n        </ChartContainer>\n      )}\n    </>\n  );\n};\n\nconst ChartContainer = styled.div``;\n\nexport default UserChart;\n"]},"metadata":{},"sourceType":"module"}