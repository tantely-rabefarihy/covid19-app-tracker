{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/Country.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { daysCount } from \"../helpers/userPageHelper\";\nimport { WorldDataContext } from \"./WorldDataContext\";\n\nconst Country = () => {\n  _s();\n\n  var _countryData$timeline;\n\n  const [countryData, setCountryData] = useState();\n  const [countryParams, setCountryParams] = useState({}); // const { country, days } = useParams();\n\n  const {\n    data,\n    country,\n    isLoading,\n    getSpecificCountry\n  } = useContext(WorldDataContext);\n  React.useEffect(() => {\n    const getCountryInfo = async specificCountry => {\n      const numDays = daysCount();\n      const response = await fetch(`/api/${specificCountry}/${numDays}`);\n      const result = await response.json();\n      return result;\n    };\n\n    getCountryInfo(country).then(data => {\n      setCountryData(data.countryInfo);\n    });\n  }, [country]);\n  const cases = countryData && Object.entries(countryData === null || countryData === void 0 ? void 0 : (_countryData$timeline = countryData.timeline) === null || _countryData$timeline === void 0 ? void 0 : _countryData$timeline.cases);\n  console.log({\n    cases\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: countryData === undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Historical data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: countryData.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Choose a country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          getSpecificCountry(e.target.value);\n        },\n        children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : data === null || data === void 0 ? void 0 : data.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.country,\n            children: item.country\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          getSpecificCountry(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: cases === null || cases === void 0 ? void 0 : cases.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [item[0], \" - \", item[1]]\n          }, item[0], true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Country, \"zUff3EyTAG2BjHp/cA0FjOUmi30=\");\n\n_c = Country;\nconst Wrapper = styled.div``;\n_c2 = Wrapper;\nexport default Country;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/Country.jsx"],"names":["React","useContext","useState","styled","useParams","daysCount","WorldDataContext","Country","countryData","setCountryData","countryParams","setCountryParams","data","country","isLoading","getSpecificCountry","useEffect","getCountryInfo","specificCountry","numDays","response","fetch","result","json","then","countryInfo","cases","Object","entries","timeline","console","log","undefined","e","target","value","map","item","index","Wrapper","div"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { daysCount } from \"../helpers/userPageHelper\";\nimport { WorldDataContext } from \"./WorldDataContext\";\n\nconst Country = () => {\n  const [countryData, setCountryData] = useState();\n  const [countryParams, setCountryParams] = useState({});\n  // const { country, days } = useParams();\n  const { data, country, isLoading, getSpecificCountry } = useContext(\n    WorldDataContext\n  );\n\n  React.useEffect(() => {\n    const getCountryInfo = async (specificCountry) => {\n      const numDays = daysCount();\n      const response = await fetch(`/api/${specificCountry}/${numDays}`);\n      const result = await response.json();\n      return result;\n    };\n\n    getCountryInfo(country).then((data) => {\n      setCountryData(data.countryInfo);\n    });\n  }, [country]);\n\n  const cases = countryData && Object.entries(countryData?.timeline?.cases);\n  console.log({ cases });\n  return (\n    <Wrapper>\n      {countryData === undefined ? (\n        <></>\n      ) : (\n        <>\n          <div>Historical data</div>\n          <h3>{countryData.country}</h3>\n          <div>Choose a country</div>\n          <select\n            onChange={(e) => {\n              getSpecificCountry(e.target.value);\n            }}\n          >\n            {isLoading ? (\n              <></>\n            ) : (\n              data?.map((item, index) => {\n                return (\n                  <option key={index} value={item.country}>\n                    {item.country}\n                  </option>\n                );\n              })\n            )}\n          </select>\n          <select\n            onChange={(e) => {\n              getSpecificCountry(e.target.value);\n            }}\n          ></select>\n          <>\n            {cases?.map((item) => {\n              return (\n                <div key={item[0]}>\n                  {item[0]} - {item[1]}\n                </div>\n              );\n            })}\n          </>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div``;\n\nexport default Country;\n"]},"metadata":{},"sourceType":"module"}