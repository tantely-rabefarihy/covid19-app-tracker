{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/Country.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { daysCount } from \"../helpers/userPageHelper\";\nimport { WorldDataContext } from \"./WorldDataContext\";\n\nconst Country = () => {\n  _s();\n\n  const [countryData, setCountryData] = useState();\n  const {\n    data,\n    country,\n    isLoading,\n    getSpecificCountry\n  } = useContext(WorldDataContext);\n  React.useEffect(() => {\n    const getCountryInfo = async specificCountry => {\n      const numDays = daysCount();\n      const response = await fetch(`/api/${specificCountry}/${numDays}`);\n      const result = await response.json();\n      return result;\n    };\n\n    getCountryInfo(country).then(data => {\n      setCountryData(data.countryInfo);\n    });\n  }, []); // const cases = countryData && Object.entries(countryData?.timeline?.cases);\n\n  console.log({\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Country, \"LifYJRpjvIDfMlazBCKpCkkyano=\");\n\n_c = Country;\nconst Wrapper = styled.div``;\n_c2 = Wrapper;\nexport default Country;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Country\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/Country.jsx"],"names":["React","useContext","useState","styled","daysCount","WorldDataContext","Country","countryData","setCountryData","data","country","isLoading","getSpecificCountry","useEffect","getCountryInfo","specificCountry","numDays","response","fetch","result","json","then","countryInfo","console","log","Wrapper","div"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA;AAA5B,MAAmDX,UAAU,CACjEI,gBADiE,CAAnE;AAIAL,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,UAAMC,cAAc,GAAG,MAAOC,eAAP,IAA2B;AAChD,YAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,YAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAE,QAAOH,eAAgB,IAAGC,OAAQ,EAApC,CAA5B;AACA,YAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,aAAOD,MAAP;AACD,KALD;;AAOAL,IAAAA,cAAc,CAACJ,OAAD,CAAd,CAAwBW,IAAxB,CAA8BZ,IAAD,IAAU;AACrCD,MAAAA,cAAc,CAACC,IAAI,CAACa,WAAN,CAAd;AACD,KAFD;AAGD,GAXD,EAWG,EAXH,EANoB,CAmBpB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEf,IAAAA;AAAF,GAAZ;AACA,sBACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CAjED;;GAAMH,O;;KAAAA,O;AAmEN,MAAMmB,OAAO,GAAGtB,MAAM,CAACuB,GAAI,EAA3B;MAAMD,O;AAEN,eAAenB,OAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { daysCount } from \"../helpers/userPageHelper\";\nimport { WorldDataContext } from \"./WorldDataContext\";\n\nconst Country = () => {\n  const [countryData, setCountryData] = useState();\n  const { data, country, isLoading, getSpecificCountry } = useContext(\n    WorldDataContext\n  );\n\n  React.useEffect(() => {\n    const getCountryInfo = async (specificCountry) => {\n      const numDays = daysCount();\n      const response = await fetch(`/api/${specificCountry}/${numDays}`);\n      const result = await response.json();\n      return result;\n    };\n\n    getCountryInfo(country).then((data) => {\n      setCountryData(data.countryInfo);\n    });\n  }, []);\n\n  // const cases = countryData && Object.entries(countryData?.timeline?.cases);\n  console.log({ data });\n  return (\n    <Wrapper>\n      {/* {countryData === undefined ? (\n        <>LOADING ...</>\n      ) : (\n        <>\n          <div>Historical data</div>\n          <h3>{countryData.country}</h3>\n          <div>Choose a country</div>\n          <select\n            onChange={(e) => {\n              getSpecificCountry(e.target.value);\n            }}\n          >\n            {isLoading ? (\n              <></>\n            ) : (\n              data?.map((item, index) => {\n                return (\n                  <option key={index} value={item.country}>\n                    {item.country}\n                  </option>\n                );\n              })\n            )}\n          </select>\n          <select\n            onChange={(e) => {\n              getSpecificCountry(e.target.value);\n            }}\n          ></select>\n          <>\n            {cases?.map((item) => {\n              return (\n                <div key={item[0]}>\n                  {item[0]} - {item[1]}\n                </div>\n              );\n            })}\n          </>\n        </>\n      )} */}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div``;\n\nexport default Country;\n"]},"metadata":{},"sourceType":"module"}