{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/helpers/helpers.js\";\nimport { Circle, Popup, Tooltip } from \"react-leaflet\";\nexport const displayCountryNum = (data, casesType = \"cases\") => {\n  const formatedNum = num => {\n    return new Intl.NumberFormat(\"en\").format(num);\n  };\n\n  return data.map((country, index) => {\n    const dateUpdate = new Date(country.updated).toLocaleString();\n    const cases = formatedNum(country.cases);\n    const recovered = formatedNum(country.recovered);\n    const deaths = formatedNum(country.deaths);\n    return /*#__PURE__*/_jsxDEV(Circle, {\n      center: [country.countryInfo.lat, country.countryInfo.long],\n      radius: Math.floor(country.cases * 10 / 100),\n      color: \"red\",\n      fillColor: \"red\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltipContainer\",\n        children: country && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: country.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Confirmed:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 21\n                }, this), \" \", cases]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Deaths:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 21\n                }, this), \" \", deaths]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Recovered:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 21\n                }, this), \" \", recovered]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Last Update:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this), \" \", dateUpdate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"New cases :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), \" \", formatedNum(country.todayCases)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  });\n};","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/helpers/helpers.js"],"names":["Circle","Popup","Tooltip","displayCountryNum","data","casesType","formatedNum","num","Intl","NumberFormat","format","map","country","index","dateUpdate","Date","updated","toLocaleString","cases","recovered","deaths","countryInfo","lat","long","Math","floor","todayCases"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAuC,eAAvC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,SAAS,GAAG,OAAnB,KAA+B;AAC9D,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3B,WAAO,IAAIC,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCH,GAAnC,CAAP;AACD,GAFD;;AAIA,SAAOH,IAAI,CAACO,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAClC,UAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASH,OAAO,CAACI,OAAjB,EAA0BC,cAA1B,EAAnB;AAEA,UAAMC,KAAK,GAAGZ,WAAW,CAACM,OAAO,CAACM,KAAT,CAAzB;AACA,UAAMC,SAAS,GAAGb,WAAW,CAACM,OAAO,CAACO,SAAT,CAA7B;AACA,UAAMC,MAAM,GAAGd,WAAW,CAACM,OAAO,CAACQ,MAAT,CAA1B;AAEA,wBACE,QAAC,MAAD;AAEE,MAAA,MAAM,EAAE,CAACR,OAAO,CAACS,WAAR,CAAoBC,GAArB,EAA0BV,OAAO,CAACS,WAAR,CAAoBE,IAA9C,CAFV;AAGE,MAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAYb,OAAO,CAACM,KAAR,GAAgB,EAAjB,GAAuB,GAAlC,CAHV;AAIE,MAAA,KAAK,EAAE,KAJT;AAKE,MAAA,SAAS,EAAE,KALb;AAAA,6BAOE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACGN,OAAO,iBACN;AAAA,kCACE;AAAA,oCACE;AAAA,wBAAKA,OAAO,CAACA;AAAb;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,sCACE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC+BM,KAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC4BE,MAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC+BD,SAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAUE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OACiCL,UADjC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,OAkBgCR,WAAW,CAACM,OAAO,CAACc,UAAT,CAlB3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAPF,OACOb,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD,GAzCM,CAAP;AA0CD,CA/CM","sourcesContent":["import { Circle, Popup, Tooltip } from \"react-leaflet\";\n\nexport const displayCountryNum = (data, casesType = \"cases\") => {\n  const formatedNum = (num) => {\n    return new Intl.NumberFormat(\"en\").format(num);\n  };\n\n  return data.map((country, index) => {\n    const dateUpdate = new Date(country.updated).toLocaleString();\n\n    const cases = formatedNum(country.cases);\n    const recovered = formatedNum(country.recovered);\n    const deaths = formatedNum(country.deaths);\n\n    return (\n      <Circle\n        key={index}\n        center={[country.countryInfo.lat, country.countryInfo.long]}\n        radius={Math.floor((country.cases * 10) / 100)}\n        color={\"red\"}\n        fillColor={\"red\"}\n      >\n        <div className=\"tooltipContainer\">\n          {country && (\n            <div>\n              <span>\n                <h2>{country.country}</h2>\n                <ul>\n                  <li>\n                    <strong>Confirmed:</strong> {cases}\n                  </li>\n                  <li>\n                    <strong>Deaths:</strong> {deaths}\n                  </li>\n                  <li>\n                    <strong>Recovered:</strong> {recovered}\n                  </li>\n                  <li>\n                    <strong>Last Update:</strong> {dateUpdate}\n                  </li>\n                </ul>\n              </span>\n              <strong>New cases :</strong> {formatedNum(country.todayCases)}\n            </div>\n          )}\n        </div>\n      </Circle>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}