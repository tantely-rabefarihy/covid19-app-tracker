{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/UserChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { WorldDataContext } from \"./WorldDataContext\"; // import { daysCount } from \"../helpers/userPageHelper\";\n// const data = [\n//   { name: \"Page A\", uv: 4000, pv: 2400, amt: 2400 },\n//   { name: \"Page B\", uv: 3000, pv: 1398, amt: 2210 },\n//   { name: \"Page C\", uv: 2000, pv: 9800, amt: 2290 },\n//   { name: \"Page D\", uv: 2780, pv: 3908, amt: 2000 },\n//   { name: \"Page E\", uv: 1890, pv: 4800, amt: 2181 },\n//   { name: \"Page F\", uv: 2390, pv: 3800, amt: 2500 },\n//   { name: \"Page G\", uv: 3490, pv: 4300, amt: 2100 },\n// ];\n\nconst UserChart = () => {\n  _s();\n\n  const {\n    countryData\n  } = useContext(WorldDataContext);\n  let numCases;\n  let numDeaths;\n  let numRecovered;\n  let dates;\n\n  if (countryData //  !== undefined || countryData !== null\n  ) {\n      numCases = Object.values(countryData === null || countryData === void 0 ? void 0 : countryData.cases);\n      numDeaths = Object.values(countryData === null || countryData === void 0 ? void 0 : countryData.deaths);\n      numRecovered = Object.values(countryData === null || countryData === void 0 ? void 0 : countryData.recovered);\n      dates = Object.keys(countryData === null || countryData === void 0 ? void 0 : countryData.cases);\n    }\n\n  const covData = [];\n\n  for (let i = 0; i < ((_numCases = numCases) === null || _numCases === void 0 ? void 0 : _numCases.length); i++) {\n    var _numCases;\n\n    let d = {\n      date: dates[i],\n      cases: numCases[i],\n      deaths: numDeaths[i],\n      recovered: numRecovered[i]\n    };\n    covData.push(d);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !countryData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"...Loading\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(AreaChart, {\n      width: 800,\n      height: 400,\n      data: covData,\n      margin: {\n        top: 10,\n        right: 0,\n        left: 0,\n        bottom: 0\n      },\n      padding: \"10px\",\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"4 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        contentStyle: {\n          backgroundColor: \"black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"cases\",\n        stackId: \"3\",\n        stroke: \"#dfc118\",\n        fill: \"#d8cd30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"deaths\",\n        stackId: \"2\",\n        stroke: \"#ff0000\",\n        fill: \"#f50303\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"recovered\",\n        stackId: \"1\",\n        stroke: \"#6bff58\",\n        fill: \"#49da25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserChart, \"isTscoBMKfAc1FZmHlUmmFCGtjk=\");\n\n_c = UserChart;\nexport default UserChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserChart\");","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/components/UserChart.jsx"],"names":["React","useContext","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","WorldDataContext","UserChart","countryData","numCases","numDeaths","numRecovered","dates","Object","values","cases","deaths","recovered","keys","covData","i","length","d","date","push","top","right","left","bottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n} from \"recharts\";\nimport { WorldDataContext } from \"./WorldDataContext\";\n// import { daysCount } from \"../helpers/userPageHelper\";\n// const data = [\n//   { name: \"Page A\", uv: 4000, pv: 2400, amt: 2400 },\n//   { name: \"Page B\", uv: 3000, pv: 1398, amt: 2210 },\n//   { name: \"Page C\", uv: 2000, pv: 9800, amt: 2290 },\n//   { name: \"Page D\", uv: 2780, pv: 3908, amt: 2000 },\n//   { name: \"Page E\", uv: 1890, pv: 4800, amt: 2181 },\n//   { name: \"Page F\", uv: 2390, pv: 3800, amt: 2500 },\n//   { name: \"Page G\", uv: 3490, pv: 4300, amt: 2100 },\n// ];\n\nconst UserChart = () => {\n  const { countryData } = useContext(WorldDataContext);\n\n  let numCases;\n  let numDeaths;\n  let numRecovered;\n  let dates;\n  if (\n    countryData\n    //  !== undefined || countryData !== null\n  ) {\n    numCases = Object.values(countryData?.cases);\n    numDeaths = Object.values(countryData?.deaths);\n    numRecovered = Object.values(countryData?.recovered);\n    dates = Object.keys(countryData?.cases);\n  }\n\n  const covData = [];\n  for (let i = 0; i < numCases?.length; i++) {\n    let d = {\n      date: dates[i],\n      cases: numCases[i],\n      deaths: numDeaths[i],\n      recovered: numRecovered[i],\n    };\n    covData.push(d);\n  }\n\n  return (\n    <>\n      {!countryData ? (\n        <>...Loading</>\n      ) : (\n        <AreaChart\n          width={800}\n          height={400}\n          data={covData}\n          margin={{ top: 10, right: 0, left: 0, bottom: 0 }}\n          padding={\"10px\"}\n        >\n          <CartesianGrid strokeDasharray=\"4 4\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <Tooltip contentStyle={{ backgroundColor: \"black\" }} />\n          <Area\n            type=\"monotone\"\n            dataKey=\"cases\"\n            stackId=\"3\"\n            stroke=\"#dfc118\"\n            fill=\"#d8cd30\"\n          />\n          <Area\n            type=\"monotone\"\n            dataKey=\"deaths\"\n            stackId=\"2\"\n            stroke=\"#ff0000\"\n            fill=\"#f50303\"\n          />\n          <Area\n            type=\"monotone\"\n            dataKey=\"recovered\"\n            stackId=\"1\"\n            stroke=\"#6bff58\"\n            fill=\"#49da25\"\n          />\n        </AreaChart>\n      )}\n    </>\n  );\n};\n\nexport default UserChart;\n"]},"metadata":{},"sourceType":"module"}