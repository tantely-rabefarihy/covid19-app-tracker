{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/helpers/helpers.js\";\nimport { Circle, Popup, Tooltip } from \"react-leaflet\";\nimport { numeral } from \"numeral\";\nexport const displayCountryNum = (data, casesType = \"cases\") => {\n  const formatedNum = num => {\n    new Intl.NumberFormat(\"en\").format(num);\n  };\n\n  return data.map((country, index) => {\n    const dateUpdate = new Date(country.updated).toLocaleString();\n    console.log(formatedNum(country.cases));\n    return /*#__PURE__*/_jsxDEV(Circle, {\n      center: [country.countryInfo.lat, country.countryInfo.long],\n      radius: Math.floor(country.cases * 10 / 100),\n      color: \"red\",\n      fillColor: \"red\",\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: country.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Confirmed:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 19\n                }, this), \" \", formatedNum(country.cases)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Deaths:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 19\n                }, this), \" \", formatedNum(country.deaths)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Recovered:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 19\n                }, this), \" \", formatedNum(country.recovered)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Last Update:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this), \" \", dateUpdate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), \"New cases :\", formatedNum(country.todayCases)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  });\n};","map":{"version":3,"sources":["/Users/tantelyrabefarihy/Documents/concordia-bootcamps/final-project-covid-tracker/covid-app/src/helpers/helpers.js"],"names":["Circle","Popup","Tooltip","numeral","displayCountryNum","data","casesType","formatedNum","num","Intl","NumberFormat","format","map","country","index","dateUpdate","Date","updated","toLocaleString","console","log","cases","countryInfo","lat","long","Math","floor","deaths","recovered","todayCases"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAuC,eAAvC;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,SAAS,GAAG,OAAnB,KAA+B;AAC9D,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3B,QAAIC,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCH,GAAnC;AACD,GAFD;;AAIA,SAAOH,IAAI,CAACO,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAClC,UAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASH,OAAO,CAACI,OAAjB,EAA0BC,cAA1B,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,WAAW,CAACM,OAAO,CAACQ,KAAT,CAAvB;AACA,wBACE,QAAC,MAAD;AAEE,MAAA,MAAM,EAAE,CAACR,OAAO,CAACS,WAAR,CAAoBC,GAArB,EAA0BV,OAAO,CAACS,WAAR,CAAoBE,IAA9C,CAFV;AAGE,MAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAYb,OAAO,CAACQ,KAAR,GAAgB,EAAjB,GAAuB,GAAlC,CAHV;AAIE,MAAA,KAAK,EAAE,KAJT;AAKE,MAAA,SAAS,EAAE,KALb;AAAA,6BAOE,QAAC,OAAD;AAAA,+BACE;AAAA,kCACE;AAAA,oCACE;AAAA,wBAAKR,OAAO,CAACA;AAAb;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,sCACE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC+BN,WAAW,CAACM,OAAO,CAACQ,KAAT,CAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC4Bd,WAAW,CAACM,OAAO,CAACc,MAAT,CADvC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OAC+BpB,WAAW,CAACM,OAAO,CAACe,SAAT,CAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAUE;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,OACiCb,UADjC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,iBAkBcR,WAAW,CAACM,OAAO,CAACgB,UAAT,CAlBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF,OACOf,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD,GAnCM,CAAP;AAoCD,CAzCM","sourcesContent":["import { Circle, Popup, Tooltip } from \"react-leaflet\";\nimport { numeral } from \"numeral\";\n\nexport const displayCountryNum = (data, casesType = \"cases\") => {\n  const formatedNum = (num) => {\n    new Intl.NumberFormat(\"en\").format(num);\n  };\n\n  return data.map((country, index) => {\n    const dateUpdate = new Date(country.updated).toLocaleString();\n    console.log(formatedNum(country.cases));\n    return (\n      <Circle\n        key={index}\n        center={[country.countryInfo.lat, country.countryInfo.long]}\n        radius={Math.floor((country.cases * 10) / 100)}\n        color={\"red\"}\n        fillColor={\"red\"}\n      >\n        <Tooltip>\n          <div>\n            <span>\n              <h2>{country.country}</h2>\n              <ul>\n                <li>\n                  <strong>Confirmed:</strong> {formatedNum(country.cases)}\n                </li>\n                <li>\n                  <strong>Deaths:</strong> {formatedNum(country.deaths)}\n                </li>\n                <li>\n                  <strong>Recovered:</strong> {formatedNum(country.recovered)}\n                </li>\n                <li>\n                  <strong>Last Update:</strong> {dateUpdate}\n                </li>\n              </ul>\n            </span>\n            New cases :{formatedNum(country.todayCases)}\n          </div>\n        </Tooltip>\n      </Circle>\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}